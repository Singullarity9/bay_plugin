"use strict";class NewsChecker{constructor(e,s){this.hostName=e,this.extensionName=s,this.newsObj=void 0,this.REQUEST_TIMEOUT=864e5,this.lastCheckDateKey="lastCheckNewsTimestamp",this.getLastNewsObjFromStorage()}showLastNews(){this.newsObj&&this.newsObj.needToShow&&(this.newsObj.needToShow=!1,this.updateLastNewsObjInStorage(this.newsObj),this.updateMainIconBadge(),this.newsObj.url)&&chrome.tabs.create({url:this.newsObj.url})}isNeedToShowNews(){return this.newsObj&&this.newsObj.needToShow}updateLastNewsObjInStorage(e){chrome.storage.sync.set({lastNews:e})}getLastNewsObjFromStorage(){chrome.storage.sync.get("lastNews",e=>{e&&e.lastNews&&(this.newsObj=e.lastNews),this.checkLastNews()})}async checkLastNews(){var e;!1!==await this.checkDelay()&&(this.saveLastCheckTimestamp(),(e=await apiGetLastNews({data:this.extensionName})).newsObj&&(!this.newsObj||!this.newsObj.id||e.newsObj.id>this.newsObj.id)&&(this.newsObj=e.newsObj,this.newsObj.needToShow=!0,this.updateLastNewsObjInStorage(this.newsObj)),this.updateMainIconBadge())}async checkDelay(){var e=await chrome.storage.local.get(this.lastCheckDateKey);return!e[this.lastCheckDateKey]||+Date.now()-e[this.lastCheckDateKey]>this.REQUEST_TIMEOUT}saveLastCheckTimestamp(){chrome.storage.local.set({[this.lastCheckDateKey]:+Date.now()})}updateMainIconBadge(){this.newsObj&&this.newsObj.needToShow?showErrorToIconBadge("1"):chrome.action.setBadgeText({text:""})}}